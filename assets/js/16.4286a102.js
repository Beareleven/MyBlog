(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{573:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("meta",{attrs:{name:"referrer",content:"no-referrer"}}),t._v(" "),a("h1",{attrs:{id:"事件流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件流"}},[t._v("#")]),t._v(" 事件流")]),t._v(" "),a("p",[t._v("事件流描述了浏览器页面接收事件的顺序。")]),t._v(" "),a("h1",{attrs:{id:"事件冒泡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件冒泡"}},[t._v("#")]),t._v(" 事件冒泡")]),t._v(" "),a("p",[t._v("IE事件流被称为事件冒泡，这是因为事件被定义为从文档树最深的节点（最具体的元素，最表层的元素）开始触发，然后向上传播至文档。\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/1645656/1652413734360-d3195c26-f509-4c36-87ec-c15eb27d6b1d.png#clientId=u3644bfaf-87c1-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u9ce1d9e3&margin=%5Bobject%20Object%5D&name=%E6%88%AA%E5%B1%8F2022-05-13%20%E4%B8%8A%E5%8D%8811.48.49.png&originHeight=518&originWidth=900&originalType=binary&ratio=1&rotation=0&showTitle=false&size=62031&status=done&style=none&taskId=ud583af69-2524-4805-bbf3-c6008a7b7d8&title=",alt:"截屏2022-05-13 上午11.48.49.png"}})]),t._v(" "),a("h1",{attrs:{id:"事件捕获"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件捕获"}},[t._v("#")]),t._v(" 事件捕获")]),t._v(" "),a("p",[t._v("事件捕获是与事件冒泡相反的机制，事件被定义为从最不具体的节点开始触发，然后最具体的节点最后收到事件。事件捕获实际上是为了在事件到达最终目标前拦截事件。\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/1645656/1652413792106-9d30c099-3349-4892-a2aa-d253d891c578.png#clientId=u3644bfaf-87c1-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u9bffac60&margin=%5Bobject%20Object%5D&name=%E6%88%AA%E5%B1%8F2022-05-13%20%E4%B8%8A%E5%8D%8811.49.48.png&originHeight=468&originWidth=986&originalType=binary&ratio=1&rotation=0&showTitle=false&size=60880&status=done&style=none&taskId=u670c70ba-607b-4657-bb5c-4d428cdb949&title=",alt:"截屏2022-05-13 上午11.49.48.png"}})]),t._v(" "),a("h1",{attrs:{id:"dom事件流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom事件流"}},[t._v("#")]),t._v(" DOM事件流")]),t._v(" "),a("p",[t._v("DOM2 Events 规范规定事件流分为 3 个阶段:事件捕获、到达目标和事件冒泡。事件捕获最先发生， 为提前拦截事件提供了可能。然后，实际的目标元素接收到事件。最后一个阶段是冒泡，最迟要在这个阶段响应事件。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/1645656/1652413829470-a97ecac3-6991-471c-98e7-d570835e3bbf.png#clientId=u3644bfaf-87c1-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u039dc962&margin=%5Bobject%20Object%5D&name=%E6%88%AA%E5%B1%8F2022-05-13%20%E4%B8%8A%E5%8D%8811.50.25.png&originHeight=496&originWidth=972&originalType=binary&ratio=1&rotation=0&showTitle=false&size=100313&status=done&style=none&taskId=u6c13623b-5ad9-4c72-9a8b-fd8bd9fd868&title=",alt:"截屏2022-05-13 上午11.50.25.png"}})]),t._v(" "),a("p",[t._v("在DOM事件流中，实际的目标（div）中捕获阶段不会接收到事件，因为捕获阶段从document到html再到body就结束。")]),t._v(" "),a("p",[t._v("而下一阶段，就会在div元素上触发“到达目标阶段”，然后冒泡阶段开始，事件反向传播到文档")]),t._v(" "),a("p",[t._v("大多数支持 DOM 事件流的浏览器实现了一个小小的拓展。虽然 "),a("strong",[t._v("DOM2 Events 规范明确捕获阶段不命中事件目标")]),t._v("，但现代浏览器都会在捕获阶段在事件目标上触发事件。最终结果是"),a("strong",[t._v("在事件目标上有两个机会来处理事件")])]),t._v(" "),a("h1",{attrs:{id:"事件处理程序-事件监听器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件处理程序-事件监听器"}},[t._v("#")]),t._v(" 事件处理程序（事件监听器）")]),t._v(" "),a("p",[t._v('事件意味着用户或浏览器执行的某种动作。比如，单击(click)、加载(load)、鼠标悬停 (mouseover)。为响应事件而调用的函数被称为事件处理程序(或事件监听器)。事件处理程序的名字 以"on"开头，因此 click 事件的处理程序叫作 onclick，而 load 事件的处理程序叫作 onload。有很多方式可以指定事件处理程序')]),t._v(" "),a("h1",{attrs:{id:"dom0事件处理程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom0事件处理程序"}},[t._v("#")]),t._v(" DOM0事件处理程序")]),t._v(" "),a("p",[t._v("在JS中创建事件处理程序的传统方式是把一个函数赋值给DOM元素。这种方式兼容性最好，所有的浏览器都支持这种方法。")]),t._v(" "),a("p",[t._v("每个元素都有它事件处理程序的属性（onxxx），这个属性的值为一个函数")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以这种方式添加事件处理程序是注册在事件流的冒泡阶段的。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" btn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myBtn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbtn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Clicked'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所赋值的函数被视为元素的方法，因此事件处理程序会在元素的作用域中运行，即this指向该元素本身。在事件处理程序中通过this可以访问到元素的属性和方法")]),t._v("\nbtn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过将事件处理程序属性设置为 null，即可移除通过 DOM0 方式添加的事件处理程序。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有多个 DOM0 事件处理程序的话，后面的是会把前面的给覆盖掉。只有执行最后一个调用的结果。")]),t._v("\n")])])]),a("h1",{attrs:{id:"dom2-事件处理程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom2-事件处理程序"}},[t._v("#")]),t._v(" DOM2 事件处理程序")]),t._v(" "),a("p",[t._v("DOM2 Events 为事件处理程序的赋值和移除定义了两个方法")]),t._v(" "),a("ul",[a("li",[t._v("addEventListener()")]),t._v(" "),a("li",[t._v("removeEventListener()。\n"),a("ul",[a("li",[t._v("这两个方法暴露在所有 DOM 节点上，它们接收 3 个参数:事件名、事件处理函数和一个布尔值，true 表示在捕获阶段调用事件处理程序，false(默认值)表示在冒泡阶段调用事件处理程序（因为跨浏览器兼容性好，所以事件处理程序默认会被添加到事件流的冒泡阶段）")])])])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("  btn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'btn click capture '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  btn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'btn click bubble '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body click capture'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body click bubble'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM2 事件处理程序的一个优点是可以给一个元素添加多个事件处理程序，并按添加的顺序触发。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// body click capture")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// btn click capture ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// btn click bubble")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// body click bubble")]),t._v("\n")])])]),a("p",[t._v("使用"),a("code",[t._v("addEventListener()")]),t._v(" 添加的事件处理程序只能使用 "),a("code",[t._v("removeEventLinstener()")]),t._v("移除（三个参数均一致才可以）；"),a("strong",[t._v("所以，使用匿名函数添加的事件处理程序是不能被移除的。")])]),t._v(" "),a("h1",{attrs:{id:"ie事件处理程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ie事件处理程序"}},[t._v("#")]),t._v(" IE事件处理程序")]),t._v(" "),a("p",[t._v("IE 实现了与 DOM 类似的方法")]),t._v(" "),a("ul",[a("li",[t._v("attachEvent()\n"),a("ul",[a("li",[t._v("在 IE 中使用 attachEvent()与使用 DOM0 方式的主要区别是事件处理程序的作用域。使用 DOM0 方式时，事件处理程序中的 this 值等于目标元素。而使用 attachEvent()时，事件处理程序是在全 19 局作用域中运行的，因此 this 等于 window。")]),t._v(" "),a("li",[t._v("使用 attachEvent()方法也可以给一个元素添加多个事件处理程序\n"),a("ul",[a("li",[t._v("不过，与DOM 方法不同，这里的事件处理程序会以添加它们的顺序反向触发。")])])])])]),t._v(" "),a("li",[t._v("detachEvent()\n"),a("ul",[a("li",[t._v("使用 attachEvent()添加的事件处理程序将使用 detachEvent()来移除，只要提供相同的参数。 25 与使用 DOM 方法类似，作为事件处理程序添加的匿名函数也无法移除。")])])])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" btn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myBtn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nbtn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attachEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onclick"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Clicked"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这两个方法接收两个同样的参数:事件处理程序的名字和事件处理函数。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为 IE8 及更早版本只支持事件冒泡，所以使用 attachEvent()添加的事件处理程序会添加到冒泡阶段。")]),t._v("\n")])])]),a("h1",{attrs:{id:"事件对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件对象"}},[t._v("#")]),t._v(" 事件对象")]),t._v(" "),a("p",[t._v("在 DOM 中发生事件时，所有相关信息都会被收集并存储在一个名为 event 的对象中。这个对象包含了一些基本信息，比如导致事件的元素、发生的事件类型，以及可能与特定事件相关的任何其他数据。 例如，鼠标操作导致的事件会生成鼠标位置信息，而键盘操作导致的事件会生成与被按下的键有关的信息。所有浏览器都支持这个 event 对象，尽管支持方式不同。")]),t._v(" "),a("h1",{attrs:{id:"dom事件对象event"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom事件对象event"}},[t._v("#")]),t._v(" DOM事件对象event")]),t._v(" "),a("p",[t._v("在 DOM 合规的浏览器中，event 对象是传给事件处理程序的唯一参数")]),t._v(" "),a("p",[t._v("在事件处理程序内部，this 对象始终等于 currentTarget 的值，而 target 只包含事件的实际目标")]),t._v(" "),a("ul",[a("li",[t._v("preventDefault()方法用于阻止特定事件的默认动作。\n"),a("ul",[a("li",[t._v("任何可以通过 preventDefault()取消默认行为的事件，其事件对象的 cancelable 属性都会设置为 true。")])])]),t._v(" "),a("li",[t._v("stopPropagation()方法用于立即阻止事件流在 DOM 结构中传播，取消后续的事件捕获或冒泡。")])]),t._v(" "),a("h1",{attrs:{id:"事件委托"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件委托"}},[t._v("#")]),t._v(" 事件委托")]),t._v(" "),a("p",[t._v("“过多事件处理程序”的解决方案是使用事件委托。事件委托利用事件冒泡，可以只使用一个事件处理程序来管理一种类型的事件。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ul id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myLinks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goSomewhere"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Go somewhere"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doSomething"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Do something"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sayHi"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Say hi"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ul"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 随意点击一个li，都会冒泡到ul上，因此，只要给ul绑定事件处理程序，就可以完成对li事件的处理")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myLinks"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查点击对象的event.id,然后执行相应的操作就可以了")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doSomething"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I changed the document\'s title"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goSomewhere"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http:// www.wrox.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sayHi"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("事件委托的优点\n"),a("ul",[a("li",[t._v("document 对象随时可用，任何时候都可以给它添加事件处理程序(不用等待 DOMContentLoaded 或 load 事件)。这意味着只要页面渲染出可点击的元素，就可以无延迟地起作用。")]),t._v(" "),a("li",[t._v("节省花在设置页面事件处理程序上的时间。只指定一个事件处理程序既可以节省 DOM 引用，也可以节省时间。")]),t._v(" "),a("li",[t._v("减少整个页面所需的内存，提升整体性能。")])])]),t._v(" "),a("li",[t._v("最适合使用事件委托的事件包括:click、mousedown、mouseup、keydown 和 keypress。")]),t._v(" "),a("li",[t._v("mouseover 和 mouseout 事件冒泡，但很难适当处理")])]),t._v(" "),a("h1",{attrs:{id:"事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),a("h2",{attrs:{id:"宏任务与微任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务与微任务"}},[t._v("#")]),t._v(" 宏任务与微任务")]),t._v(" "),a("p",[t._v("在JavaScript中，任务被分为两种，一种是宏任务，一种叫微任务")]),t._v(" "),a("ul",[a("li",[t._v("宏任务：script全部代码、setTimeout、setInterval、setImmediate、I/O、UI Rendering")]),t._v(" "),a("li",[t._v("微任务：Process.nextTick（Node独有）、Promise、Object.observe(废弃)、MutationObserver")])]),t._v(" "),a("h2",{attrs:{id:"浏览器中的event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中的event-loop"}},[t._v("#")]),t._v(" 浏览器中的Event Loop")]),t._v(" "),a("p",[a("code",[t._v("Javascript")]),t._v(" 有一个 "),a("code",[t._v("main thread")]),t._v(" 主线程和 "),a("code",[t._v("call-stack")]),t._v(" 调用栈(执行栈)，所有的任务都会被放到调用栈等待主线程执行")]),t._v(" "),a("h2",{attrs:{id:"js调用栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js调用栈"}},[t._v("#")]),t._v(" JS调用栈")]),t._v(" "),a("ul",[a("li",[t._v("JS调用栈采用的是后进先出的规则，当函数执行的时候，会被添加到栈的顶部，当执行栈执行完成后，就会从栈顶移出，直到栈内被清空。")])]),t._v(" "),a("h2",{attrs:{id:"同步异步任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步异步任务"}},[t._v("#")]),t._v(" 同步异步任务")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Javascript")]),t._v("单线程任务被分为"),a("strong",[t._v("同步任务")]),t._v("和"),a("strong",[t._v("异步任务")]),t._v("，同步任务会在调用栈中按照顺序等待主线程依次执行，异步任务会在异步任务有了结果后，将注册的回调函数放入"),a("strong",[t._v("任务队列")]),t._v("中等待主线程空闲的时候（调用栈被清空），被读取到栈内等待主线程的执行。")])]),t._v(" "),a("h2",{attrs:{id:"js异步执行机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js异步执行机制"}},[t._v("#")]),t._v(" JS异步执行机制")]),t._v(" "),a("ol",[a("li",[t._v("所有任务都在主线程上执行，形成一个执行栈。")]),t._v(" "),a("li",[t._v('主线程之外，还存在一个"任务队列"（task queue）。只要异步任务有了运行结果，就在"任务队列"之中放置一个事件。')]),t._v(" "),a("li",[t._v('一旦"执行栈"中的所有同步任务执行完毕，系统就会读取"任务队列"。那些对应的异步任务，结束等待状态，进入执行栈并开始执行。')]),t._v(" "),a("li",[a("strong",[t._v("主线程不断重复上面的第三步")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"任务队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务队列"}},[t._v("#")]),t._v(" 任务队列")]),t._v(" "),a("ul",[a("li",[t._v("任务队列"),a("code",[t._v("Task Queue")]),t._v("，即队列，用来保存异步任务，遵循"),a("strong",[t._v("先进先出")]),t._v("的原则。"),a("strong",[t._v("它主要负责将新的任务发送到队列中进行处理")]),t._v(" "),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/1645656/1652413894806-998e4553-43f5-4402-adef-89368277d22b.png#clientId=u3644bfaf-87c1-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u7a8c2358&margin=%5Bobject%20Object%5D&name=%E6%88%AA%E5%B1%8F2022-05-13%20%E4%B8%8A%E5%8D%8811.51.30.png&originHeight=1144&originWidth=1438&originalType=binary&ratio=1&rotation=0&showTitle=false&size=956227&status=done&style=none&taskId=u3eab7521-fc93-4fdb-aee5-380302b0d73&title=",alt:"截屏2022-05-13 上午11.51.30.png"}}),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/1645656/1652413903143-fdd265f7-6930-4741-9242-c8e0a3e7c2a7.png#clientId=u3644bfaf-87c1-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ue0e1b9d2&margin=%5Bobject%20Object%5D&name=%E6%88%AA%E5%B1%8F2022-05-13%20%E4%B8%8A%E5%8D%8811.51.39.png&originHeight=1136&originWidth=1382&originalType=binary&ratio=1&rotation=0&showTitle=false&size=642582&status=done&style=none&taskId=u8c9491fa-b481-475e-a2b1-34e9e2f9e5b&title=",alt:"截屏2022-05-13 上午11.51.39.png"}})])])])}),[],!1,null,null,null);s.default=e.exports}}]);